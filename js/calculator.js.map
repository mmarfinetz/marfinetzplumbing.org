{
  "version": 3,
  "sources": ["../node_modules/clsx/dist/clsx.mjs", "../node_modules/tailwind-merge/src/lib/class-group-utils.ts", "../node_modules/tailwind-merge/src/lib/lru-cache.ts", "../node_modules/tailwind-merge/src/lib/parse-class-name.ts", "../node_modules/tailwind-merge/src/lib/config-utils.ts", "../node_modules/tailwind-merge/src/lib/merge-classlist.ts", "../node_modules/tailwind-merge/src/lib/tw-join.ts", "../node_modules/tailwind-merge/src/lib/create-tailwind-merge.ts", "../node_modules/tailwind-merge/src/lib/from-theme.ts", "../node_modules/tailwind-merge/src/lib/validators.ts", "../node_modules/tailwind-merge/src/lib/default-config.ts", "../node_modules/tailwind-merge/src/lib/merge-configs.ts", "../node_modules/tailwind-merge/src/lib/extend-tailwind-merge.ts", "../node_modules/tailwind-merge/src/lib/tw-merge.ts", "../lib/utils.ts", "../components/ui/card.tsx", "../components/RevenueCalculator.tsx"],
  "sourcesContent": ["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import {\n    AnyClassGroupIds,\n    AnyConfig,\n    AnyThemeGroupIds,\n    ClassGroup,\n    ClassValidator,\n    Config,\n    ThemeGetter,\n    ThemeObject,\n} from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: AnyClassGroupIds\n}\n\ninterface ClassValidatorObject {\n    classGroupId: AnyClassGroupIds\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport const createClassGroupUtils = (config: AnyConfig) => {\n    const classMap = createClassMap(config)\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config\n\n    const getClassGroupId = (className: string) => {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    const getConflictingClassGroupIds = (\n        classGroupId: AnyClassGroupIds,\n        hasPostfixModifier: boolean,\n    ) => {\n        const conflicts = conflictingClassGroups[classGroupId] || []\n\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\n        }\n\n        return conflicts\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nconst getGroupRecursive = (\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): AnyClassGroupIds | undefined => {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nconst getGroupIdForArbitraryProperty = (className: string) => {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport const createClassMap = (config: Config<AnyClassGroupIds, AnyThemeGroupIds>) => {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix,\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nconst processClassesRecursively = (\n    classGroup: ClassGroup<AnyThemeGroupIds>,\n    classPartObject: ClassPartObject,\n    classGroupId: AnyClassGroupIds,\n    theme: ThemeObject<AnyThemeGroupIds>,\n) => {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nconst getPart = (classPartObject: ClassPartObject, path: string) => {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nconst isThemeGetter = (func: ClassValidator | ThemeGetter): func is ThemeGetter =>\n    (func as ThemeGetter).isThemeGetter\n\nconst getPrefixedClassGroupEntries = (\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup<AnyThemeGroupIds>]>,\n    prefix: string | undefined,\n): Array<[classGroupId: string, classGroup: ClassGroup<AnyThemeGroupIds>]> => {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]),\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n", "// Export is needed because TypeScript complains about an error otherwise:\n// Error: \u2026/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"\u2026/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport const createLruCache = <Key, Value>(maxCacheSize: number): LruCache<Key, Value> => {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    const update = (key: Key, value: Value) => {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n", "import { AnyConfig } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\n\nexport const createParseClassName = (config: AnyConfig) => {\n    const { separator, experimentalParseClassName } = config\n    const isSeparatorSingleCharacter = separator.length === 1\n    const firstSeparatorCharacter = separator[0]\n    const separatorLength = separator.length\n\n    // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n    const parseClassName = (className: string) => {\n        const modifiers = []\n\n        let bracketDepth = 0\n        let modifierStart = 0\n        let postfixModifierPosition: number | undefined\n\n        for (let index = 0; index < className.length; index++) {\n            let currentCharacter = className[index]\n\n            if (bracketDepth === 0) {\n                if (\n                    currentCharacter === firstSeparatorCharacter &&\n                    (isSeparatorSingleCharacter ||\n                        className.slice(index, index + separatorLength) === separator)\n                ) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + separatorLength\n                    continue\n                }\n\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index\n                    continue\n                }\n            }\n\n            if (currentCharacter === '[') {\n                bracketDepth++\n            } else if (currentCharacter === ']') {\n                bracketDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const hasImportantModifier =\n            baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n        const baseClassName = hasImportantModifier\n            ? baseClassNameWithImportantModifier.substring(1)\n            : baseClassNameWithImportantModifier\n\n        const maybePostfixModifierPosition =\n            postfixModifierPosition && postfixModifierPosition > modifierStart\n                ? postfixModifierPosition - modifierStart\n                : undefined\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        }\n    }\n\n    if (experimentalParseClassName) {\n        return (className: string) => experimentalParseClassName({ className, parseClassName })\n    }\n\n    return parseClassName\n}\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport const sortModifiers = (modifiers: string[]) => {\n    if (modifiers.length <= 1) {\n        return modifiers\n    }\n\n    const sortedModifiers: string[] = []\n    let unsortedModifiers: string[] = []\n\n    modifiers.forEach((modifier) => {\n        const isArbitraryVariant = modifier[0] === '['\n\n        if (isArbitraryVariant) {\n            sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n            unsortedModifiers = []\n        } else {\n            unsortedModifiers.push(modifier)\n        }\n    })\n\n    sortedModifiers.push(...unsortedModifiers.sort())\n\n    return sortedModifiers\n}\n", "import { createClassGroupUtils } from './class-group-utils'\nimport { createLruCache } from './lru-cache'\nimport { createParseClassName } from './parse-class-name'\nimport { AnyConfig } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport const createConfigUtils = (config: AnyConfig) => ({\n    cache: createLruCache<string, string>(config.cacheSize),\n    parseClassName: createParseClassName(config),\n    ...createClassGroupUtils(config),\n})\n", "import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER, sortModifiers } from './parse-class-name'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport const mergeClassList = (classList: string, configUtils: ConfigUtils) => {\n    const { parseClassName, getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict: string[] = []\n    const classNames = classList.trim().split(SPLIT_CLASSES_REGEX)\n\n    let result = ''\n\n    for (let index = classNames.length - 1; index >= 0; index -= 1) {\n        const originalClassName = classNames[index]!\n\n        const { modifiers, hasImportantModifier, baseClassName, maybePostfixModifierPosition } =\n            parseClassName(originalClassName)\n\n        let hasPostfixModifier = Boolean(maybePostfixModifierPosition)\n        let classGroupId = getClassGroupId(\n            hasPostfixModifier\n                ? baseClassName.substring(0, maybePostfixModifierPosition)\n                : baseClassName,\n        )\n\n        if (!classGroupId) {\n            if (!hasPostfixModifier) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\n                continue\n            }\n\n            classGroupId = getClassGroupId(baseClassName)\n\n            if (!classGroupId) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\n                continue\n            }\n\n            hasPostfixModifier = false\n        }\n\n        const variantModifier = sortModifiers(modifiers).join(':')\n\n        const modifierId = hasImportantModifier\n            ? variantModifier + IMPORTANT_MODIFIER\n            : variantModifier\n\n        const classId = modifierId + classGroupId\n\n        if (classGroupsInConflict.includes(classId)) {\n            // Tailwind class omitted due to conflict\n            continue\n        }\n\n        classGroupsInConflict.push(classId)\n\n        const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier)\n        for (let i = 0; i < conflictGroups.length; ++i) {\n            const group = conflictGroups[i]!\n            classGroupsInConflict.push(modifierId + group)\n        }\n\n        // Tailwind class not in conflict\n        result = originalClassName + (result.length > 0 ? ' ' + result : result)\n    }\n\n    return result\n}\n", "/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | 0n | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nconst toValue = (mix: ClassNameArray | string) => {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n", "import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { AnyConfig } from './types'\n\ntype CreateConfigFirst = () => AnyConfig\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    createConfigFirst: CreateConfigFirst,\n    ...createConfigRest: CreateConfigSubsequent[]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const config = createConfigRest.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            createConfigFirst() as AnyConfig,\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n", "import { DefaultThemeGroupIds, NoInfer, ThemeGetter, ThemeObject } from './types'\n\nexport const fromTheme = <\n    AdditionalThemeGroupIds extends string = never,\n    DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds,\n>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>): ThemeGetter => {\n    const themeGetter = (theme: ThemeObject<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) =>\n        theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n", "const arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex =\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\nconst imageRegex =\n    /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/\n\nexport const isLength = (value: string) =>\n    isNumber(value) || stringLengths.has(value) || fractionRegex.test(value)\n\nexport const isArbitraryLength = (value: string) =>\n    getIsArbitraryValue(value, 'length', isLengthOnly)\n\nexport const isNumber = (value: string) => Boolean(value) && !Number.isNaN(Number(value))\n\nexport const isArbitraryNumber = (value: string) => getIsArbitraryValue(value, 'number', isNumber)\n\nexport const isInteger = (value: string) => Boolean(value) && Number.isInteger(Number(value))\n\nexport const isPercent = (value: string) => value.endsWith('%') && isNumber(value.slice(0, -1))\n\nexport const isArbitraryValue = (value: string) => arbitraryValueRegex.test(value)\n\nexport const isTshirtSize = (value: string) => tshirtUnitRegex.test(value)\n\nconst sizeLabels = new Set(['length', 'size', 'percentage'])\n\nexport const isArbitrarySize = (value: string) => getIsArbitraryValue(value, sizeLabels, isNever)\n\nexport const isArbitraryPosition = (value: string) =>\n    getIsArbitraryValue(value, 'position', isNever)\n\nconst imageLabels = new Set(['image', 'url'])\n\nexport const isArbitraryImage = (value: string) => getIsArbitraryValue(value, imageLabels, isImage)\n\nexport const isArbitraryShadow = (value: string) => getIsArbitraryValue(value, '', isShadow)\n\nexport const isAny = () => true\n\nconst getIsArbitraryValue = (\n    value: string,\n    label: string | Set<string>,\n    testValue: (value: string) => boolean,\n) => {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return typeof label === 'string' ? result[1] === label : label.has(result[1])\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nconst isLengthOnly = (value: string) =>\n    // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n    lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)\n\nconst isNever = () => false\n\nconst isShadow = (value: string) => shadowRegex.test(value)\n\nconst isImage = (value: string) => imageRegex.test(value)\n", "import { fromTheme } from './from-theme'\nimport { Config, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\nimport {\n    isAny,\n    isArbitraryImage,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryValue,\n    isInteger,\n    isLength,\n    isNumber,\n    isPercent,\n    isTshirtSize,\n} from './validators'\n\nexport const getDefaultConfig = () => {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderSpacing = fromTheme('borderSpacing')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const gradientColorStopPositions = fromTheme('gradientColorStopPositions')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing] as const\n    const getSpacingWithArbitrary = () => [isArbitraryValue, spacing] as const\n    const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength] as const\n    const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n        ] as const\n    const getAlign = () =>\n        ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const getNumberAndArbitrary = () => [isNumber, isArbitraryValue]\n\n    return {\n        cacheSize: 500,\n        separator: ':',\n        theme: {\n            colors: [isAny],\n            spacing: [isLength, isArbitraryLength],\n            blur: ['none', '', isTshirtSize, isArbitraryValue],\n            brightness: getNumberAndArbitrary(),\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n            borderSpacing: getSpacingWithArbitrary(),\n            borderWidth: getLengthWithEmptyAndArbitrary(),\n            contrast: getNumberAndArbitrary(),\n            grayscale: getZeroAndEmpty(),\n            hueRotate: getNumberAndArbitrary(),\n            invert: getZeroAndEmpty(),\n            gap: getSpacingWithArbitrary(),\n            gradientColorStops: [colors],\n            gradientColorStopPositions: [isPercent, isArbitraryLength],\n            inset: getSpacingWithAutoAndArbitrary(),\n            margin: getSpacingWithAutoAndArbitrary(),\n            opacity: getNumberAndArbitrary(),\n            padding: getSpacingWithArbitrary(),\n            saturate: getNumberAndArbitrary(),\n            scale: getNumberAndArbitrary(),\n            sepia: getZeroAndEmpty(),\n            skew: getNumberAndArbitrary(),\n            space: getSpacingWithArbitrary(),\n            translate: getSpacingWithArbitrary(),\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none', 'start', 'end'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none', 'start', 'end'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Start\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            start: [{ start: [inset] }],\n            /**\n             * End\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            end: [{ end: [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: ['auto', isInteger, isArbitraryValue] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: getSpacingWithAutoAndArbitrary() }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger, isArbitraryValue] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [\n                {\n                    col: [\n                        'auto',\n                        { span: ['full', isInteger, isArbitraryValue] },\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [\n                { row: ['auto', { span: [isInteger, isArbitraryValue] }, isArbitraryValue] },\n            ],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: ['normal', ...getAlign()] }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: ['normal', ...getAlign(), 'baseline'] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'baseline'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Start\n             * @see https://tailwindcss.com/docs/padding\n             */\n            ps: [{ ps: [padding] }],\n            /**\n             * Padding End\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pe: [{ pe: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Start\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ms: [{ ms: [margin] }],\n            /**\n             * Margin End\n             * @see https://tailwindcss.com/docs/margin\n             */\n            me: [{ me: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [\n                {\n                    w: [\n                        'auto',\n                        'min',\n                        'max',\n                        'fit',\n                        'svw',\n                        'lvw',\n                        'dvw',\n                        isArbitraryValue,\n                        spacing,\n                    ],\n                },\n            ],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit'] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        isArbitraryValue,\n                        spacing,\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [\n                {\n                    h: [\n                        isArbitraryValue,\n                        spacing,\n                        'auto',\n                        'min',\n                        'max',\n                        'fit',\n                        'svh',\n                        'lvh',\n                        'dvh',\n                    ],\n                },\n            ],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [\n                { 'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh'] },\n            ],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [\n                { 'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh'] },\n            ],\n            /**\n             * Size\n             * @see https://tailwindcss.com/docs/size\n             */\n            size: [{ size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Line Clamp\n             * @see https://tailwindcss.com/docs/line-clamp\n             */\n            'line-clamp': [{ 'line-clamp': ['none', isNumber, isArbitraryNumber] }],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                {\n                    leading: [\n                        'none',\n                        'tight',\n                        'snug',\n                        'normal',\n                        'relaxed',\n                        'loose',\n                        isLength,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * List Style Image\n             * @see https://tailwindcss.com/docs/list-style-image\n             */\n            'list-image': [{ 'list-image': ['none', isArbitraryValue] }],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [\n                { decoration: ['auto', 'from-font', isLength, isArbitraryLength] },\n            ],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isLength, isArbitraryValue] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Wrap\n             * @see https://tailwindcss.com/docs/text-wrap\n             */\n            'text-wrap': [{ text: ['wrap', 'nowrap', 'balance', 'pretty'] }],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: getSpacingWithArbitrary() }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\n            ],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Hyphens\n             * @see https://tailwindcss.com/docs/hyphens\n             */\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryImage,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from-pos': [{ from: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops Via Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via-pos': [{ via: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops To Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to-pos': [{ to: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-s': [{ 'rounded-s': [borderRadius] }],\n            /**\n             * Border Radius End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-e': [{ 'rounded-e': [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Start Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ss': [{ 'rounded-ss': [borderRadius] }],\n            /**\n             * Border Radius Start End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-se': [{ 'rounded-se': [borderRadius] }],\n            /**\n             * Border Radius End End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ee': [{ 'rounded-ee': [borderRadius] }],\n            /**\n             * Border Radius End Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-es': [{ 'rounded-es': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Start\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-s': [{ 'border-s': [borderWidth] }],\n            /**\n             * Border Width End\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-e': [{ 'border-e': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color S\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-s': [{ 'border-s': [borderColor] }],\n            /**\n             * Border Color E\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-e': [{ 'border-e': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles()] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isLength, isArbitraryValue] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength, isArbitraryLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmptyAndArbitrary() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength, isArbitraryLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Blend Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker'] }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': [borderSpacing] }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': [borderSpacing] }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': [borderSpacing] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            /**\n             * Caption Side\n             * @see https://tailwindcss.com/docs/caption-side\n             */\n            caption: [{ caption: ['top', 'bottom'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: getNumberAndArbitrary() }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: getNumberAndArbitrary() }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: [{ appearance: ['none', 'auto'] }],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Start\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ms': [{ 'scroll-ms': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin End\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-me': [{ 'scroll-me': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Start\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-ps': [{ 'scroll-ps': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding End\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pe': [{ 'scroll-pe': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: ['auto', 'none', 'manipulation'],\n                },\n            ],\n            /**\n             * Touch Action X\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-x': [\n                {\n                    'touch-pan': ['x', 'left', 'right'],\n                },\n            ],\n            /**\n             * Touch Action Y\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-y': [\n                {\n                    'touch-pan': ['y', 'up', 'down'],\n                },\n            ],\n            /**\n             * Touch Action Pinch Zoom\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-pz': ['touch-pinch-zoom'],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors, 'none'] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength, isArbitraryLength, isArbitraryNumber] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors, 'none'] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n            /**\n             * Forced Color Adjust\n             * @see https://tailwindcss.com/docs/forced-color-adjust\n             */\n            'forced-color-adjust': [{ 'forced-color-adjust': ['auto', 'none'] }],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            size: ['w', 'h'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            'line-clamp': ['display', 'overflow'],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-s': ['rounded-ss', 'rounded-es'],\n            'rounded-e': ['rounded-se', 'rounded-ee'],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': [\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l',\n            ],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-s',\n                'border-color-e',\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n            touch: ['touch-x', 'touch-y', 'touch-pz'],\n            'touch-x': ['touch'],\n            'touch-y': ['touch'],\n            'touch-pz': ['touch'],\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': ['leading'],\n        },\n    } as const satisfies Config<DefaultClassGroupIds, DefaultThemeGroupIds>\n}\n", "import { AnyConfig, ConfigExtension } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport const mergeConfigs = <ClassGroupIds extends string, ThemeGroupIds extends string = never>(\n    baseConfig: AnyConfig,\n    {\n        cacheSize,\n        prefix,\n        separator,\n        experimentalParseClassName,\n        extend = {},\n        override = {},\n    }: ConfigExtension<ClassGroupIds, ThemeGroupIds>,\n) => {\n    overrideProperty(baseConfig, 'cacheSize', cacheSize)\n    overrideProperty(baseConfig, 'prefix', prefix)\n    overrideProperty(baseConfig, 'separator', separator)\n    overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName)\n\n    for (const configKey in override) {\n        overrideConfigProperties(\n            baseConfig[configKey as keyof typeof override],\n            override[configKey as keyof typeof override],\n        )\n    }\n\n    for (const key in extend) {\n        mergeConfigProperties(\n            baseConfig[key as keyof typeof extend],\n            extend[key as keyof typeof extend],\n        )\n    }\n\n    return baseConfig\n}\n\nconst overrideProperty = <T extends object, K extends keyof T>(\n    baseObject: T,\n    overrideKey: K,\n    overrideValue: T[K] | undefined,\n) => {\n    if (overrideValue !== undefined) {\n        baseObject[overrideKey] = overrideValue\n    }\n}\n\nconst overrideConfigProperties = (\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    overrideObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) => {\n    if (overrideObject) {\n        for (const key in overrideObject) {\n            overrideProperty(baseObject, key, overrideObject[key])\n        }\n    }\n}\n\nconst mergeConfigProperties = (\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    mergeObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) => {\n    if (mergeObject) {\n        for (const key in mergeObject) {\n            const mergeValue = mergeObject[key]\n\n            if (mergeValue !== undefined) {\n                baseObject[key] = (baseObject[key] || []).concat(mergeValue)\n            }\n        }\n    }\n}\n", "import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { AnyConfig, ConfigExtension, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\n\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\n\nexport const extendTailwindMerge = <\n    AdditionalClassGroupIds extends string = never,\n    AdditionalThemeGroupIds extends string = never,\n>(\n    configExtension:\n        | ConfigExtension<\n              DefaultClassGroupIds | AdditionalClassGroupIds,\n              DefaultThemeGroupIds | AdditionalThemeGroupIds\n          >\n        | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) =>\n    typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n", "import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n", "import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} ", "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nexport { Card, CardHeader, CardTitle, CardContent } ", "'use client';\n\nimport React, { useState, useEffect, ReactNode } from 'react';\n\n// Define interfaces for component props\ninterface ComponentProps {\n  className?: string;\n  children?: ReactNode;\n}\n\n// Check if we're in standalone or Next.js environment\nconst isStandalone = typeof window !== 'undefined' && \n                     process.env.STANDALONE_CALCULATOR === 'true';\n\n// Conditionally import components based on environment\nlet Card, CardContent, CardHeader, CardTitle;\ntry {\n  if (!isStandalone) {\n    // Next.js app imports\n    const ui = require('@/components/ui/card');\n    Card = ui.Card;\n    CardContent = ui.CardContent;\n    CardHeader = ui.CardHeader;\n    CardTitle = ui.CardTitle;\n  } else {\n    // Create simple stub components for standalone mode\n    Card = ({ className, children }: ComponentProps) => <div className={`win95-card ${className || ''}`}>{children}</div>;\n    CardContent = ({ className, children }: ComponentProps) => <div className={`win95-card-content ${className || ''}`}>{children}</div>;\n    CardHeader = ({ className, children }: ComponentProps) => <div className={`win95-card-header ${className || ''}`}>{children}</div>;\n    CardTitle = ({ className, children }: ComponentProps) => <div className={`win95-card-title ${className || ''}`}>{children}</div>;\n  }\n} catch (error) {\n  console.error('Error loading UI components:', error);\n  // Fallback components\n  Card = ({ className, children }: ComponentProps) => <div className={`win95-card ${className || ''}`}>{children}</div>;\n  CardContent = ({ className, children }: ComponentProps) => <div className={`win95-card-content ${className || ''}`}>{children}</div>;\n  CardHeader = ({ className, children }: ComponentProps) => <div className={`win95-card-header ${className || ''}`}>{children}</div>;\n  CardTitle = ({ className, children }: ComponentProps) => <div className={`win95-card-title ${className || ''}`}>{children}</div>;\n}\n\n// Import chart components\nimport { \n  LineChart, Line, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, ResponsiveContainer, BarChart, Bar, Cell \n} from 'recharts';\n\n// Import CSS\nimport '@/css/win95.css';\n\ninterface ChartData {\n  name: string;\n  value: number;\n  color?: string;\n  breakdown?: { label: string; value: number }[];\n}\n\nconst RevenueCalculator = () => {\n  const [inputs, setInputs] = useState({\n    hoursPerWeek: 40,\n    weeksPerYear: 52,\n    billablePercent: 45,\n    emergencyPercent: 20,\n    standardRate: 85,\n    emergencyRate: 200,\n    materialMarkupPercent: 33.3,\n    baseLabor: 30,\n    marketingBudget: 10000,\n  });\n\n  const [calculations, setCalculations] = useState({\n    totalHours: 0,\n    billableHours: 0,\n    standardHours: 0,\n    emergencyHours: 0,\n    standardRevenue: 0,\n    emergencyRevenue: 0,\n    materialsSales: 0,\n    materialsCost: 0,\n    materialsProfit: 0,\n    totalRevenue: 0,\n    totalCosts: 0,\n    netProfit: 0,\n  });\n\n  const calculateRevenue = () => {\n    // Total hours calculation\n    const totalHours = inputs.hoursPerWeek * inputs.weeksPerYear;\n    const billableHours = totalHours * (inputs.billablePercent / 100);\n    \n    // Hours breakdown\n    const standardHours = billableHours * (1 - inputs.emergencyPercent / 100);\n    const emergencyHours = billableHours * (inputs.emergencyPercent / 100);\n    \n    // Revenue calculations\n    const standardRevenue = standardHours * inputs.standardRate;\n    const emergencyRevenue = emergencyHours * inputs.emergencyRate;\n    \n    // Materials calculations\n    const materialsSales = billableHours * 60; // Average $60 per billable hour\n    const materialsCost = materialsSales / (1 + inputs.materialMarkupPercent / 100);\n    const materialsProfit = materialsSales - materialsCost;\n    \n    // Cost calculations\n    const laborCost = billableHours * inputs.baseLabor;\n    const overhead = {\n      marketing: inputs.marketingBudget,\n      insurance: 5000,\n      vehicleMaintenance: 3000,\n      tools: 2000,\n      software: 2500,\n      emergencyFund: 5000,\n    };\n    \n    const totalCosts = laborCost + Object.values(overhead).reduce((a, b) => a + b, 0) + materialsCost;\n    const totalRevenue = standardRevenue + emergencyRevenue + materialsSales;\n    const netProfit = totalRevenue - totalCosts;\n\n    setCalculations({\n      totalHours,\n      billableHours,\n      standardHours,\n      emergencyHours,\n      standardRevenue,\n      emergencyRevenue,\n      materialsSales,\n      materialsCost,\n      materialsProfit,\n      totalRevenue,\n      totalCosts,\n      netProfit,\n    });\n  };\n\n  useEffect(() => {\n    calculateRevenue();\n  }, [inputs]);\n\n  const handleInputChange = (name: string, value: string) => {\n    setInputs(prev => ({\n      ...prev,\n      [name]: parseFloat(value),\n    }));\n  };\n\n  const revenueBreakdown: ChartData[] = [\n    { \n      name: 'Standard Hours', \n      value: calculations.standardRevenue, \n      color: '#4f46e5',\n      breakdown: [\n        { label: 'Hours', value: calculations.standardHours },\n        { label: 'Rate', value: inputs.standardRate },\n        { label: 'Revenue', value: calculations.standardRevenue }\n      ]\n    },\n    { \n      name: 'Emergency Hours', \n      value: calculations.emergencyRevenue, \n      color: '#4f46e5',\n      breakdown: [\n        { label: 'Hours', value: calculations.emergencyHours },\n        { label: 'Rate', value: inputs.emergencyRate },\n        { label: 'Revenue', value: calculations.emergencyRevenue }\n      ]\n    },\n    { \n      name: 'Materials Profit', \n      value: calculations.materialsProfit, \n      color: '#4f46e5',\n      breakdown: [\n        { label: 'Sales', value: calculations.materialsSales },\n        { label: 'Cost', value: calculations.materialsCost },\n        { label: 'Profit', value: calculations.materialsProfit }\n      ]\n    },\n  ];\n\n  const profitBreakdown: ChartData[] = [\n    { \n      name: 'Revenue', \n      value: calculations.totalRevenue, \n      color: '#22c55e',\n      breakdown: [\n        { label: 'Standard Hours', value: calculations.standardRevenue },\n        { label: 'Emergency Hours', value: calculations.emergencyRevenue },\n        { label: 'Materials Sales', value: calculations.materialsSales }\n      ]\n    },\n    { \n      name: 'Costs', \n      value: -calculations.totalCosts, \n      color: '#ef4444',\n      breakdown: [\n        { label: 'Labor', value: -calculations.billableHours * inputs.baseLabor },\n        { label: 'Marketing', value: -inputs.marketingBudget },\n        { label: 'Insurance', value: -5000 },\n        { label: 'Vehicle Maintenance', value: -3000 },\n        { label: 'Tools', value: -2000 },\n        { label: 'Software', value: -2500 },\n        { label: 'Emergency Fund', value: -5000 },\n        { label: 'Materials Cost', value: -calculations.materialsCost }\n      ]\n    },\n    { \n      name: 'Net Profit', \n      value: calculations.netProfit, \n      color: calculations.netProfit >= 0 ? '#22c55e' : '#ef4444',\n      breakdown: [\n        { label: 'Total Revenue', value: calculations.totalRevenue },\n        { label: 'Total Costs', value: -calculations.totalCosts },\n        { label: 'Net Profit', value: calculations.netProfit }\n      ]\n    },\n  ];\n\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(value);\n  };\n\n  const getBarColor = (value: number) => {\n    return value >= 0 ? '#22c55e' : '#ef4444';\n  };\n\n  interface TooltipProps {\n    active?: boolean;\n    payload?: Array<{\n      payload: {\n        breakdown?: Array<{\n          label: string;\n          value: number;\n        }>;\n      };\n    }>;\n    label?: string;\n  }\n\n  const CustomTooltip = ({ active, payload, label }: TooltipProps) => {\n    if (!active || !payload || !payload[0]) return null;\n    \n    const data = payload[0].payload;\n    return (\n      <div className=\"win95-tooltip\">\n        <p className=\"font-bold mb-1\">{label}</p>\n        <div className=\"space-y-1\">\n          {data.breakdown?.map((item: { label: string; value: number }, index: number) => (\n            <div key={index} className=\"flex justify-between gap-4\">\n              <span>{item.label}:</span>\n              <span className=\"font-bold\">{formatCurrency(item.value)}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"win95-container p-4 space-y-4\">\n      <div className=\"win95-window\">\n        <div className=\"win95-title-bar\">\n          <div className=\"win95-title-bar-text\">\n            <span role=\"img\" aria-label=\"calculator\">\uD83E\uDDEE</span> Plumbing Business Revenue Calculator\n          </div>\n          <div className=\"win95-title-bar-controls\">\n            <button className=\"win95-button px-2 py-0\">_</button>\n            <button className=\"win95-button px-2 py-0\">\u25A1</button>\n            <button className=\"win95-button px-2 py-0\">\u00D7</button>\n          </div>\n        </div>\n        <div className=\"p-4\">\n          <div className=\"win95-grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"win95-label\">Hours per Week</label>\n                <input\n                  type=\"number\"\n                  className=\"win95-input w-full\"\n                  value={inputs.hoursPerWeek}\n                  onChange={(e) => handleInputChange('hoursPerWeek', e.target.value)}\n                />\n              </div>\n              <div>\n                <label className=\"win95-label\">Billable %</label>\n                <input\n                  type=\"number\"\n                  className=\"win95-input w-full\"\n                  value={inputs.billablePercent}\n                  onChange={(e) => handleInputChange('billablePercent', e.target.value)}\n                />\n              </div>\n              <div>\n                <label className=\"win95-label\">Emergency %</label>\n                <input\n                  type=\"number\"\n                  className=\"win95-input w-full\"\n                  value={inputs.emergencyPercent}\n                  onChange={(e) => handleInputChange('emergencyPercent', e.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"win95-label\">Standard Rate</label>\n                <input\n                  type=\"number\"\n                  className=\"win95-input w-full\"\n                  value={inputs.standardRate}\n                  onChange={(e) => handleInputChange('standardRate', e.target.value)}\n                />\n              </div>\n              <div>\n                <label className=\"win95-label\">Emergency Rate</label>\n                <input\n                  type=\"number\"\n                  className=\"win95-input w-full\"\n                  value={inputs.emergencyRate}\n                  onChange={(e) => handleInputChange('emergencyRate', e.target.value)}\n                />\n              </div>\n              <div>\n                <label className=\"win95-label\">Marketing Budget</label>\n                <input\n                  type=\"number\"\n                  className=\"win95-input w-full\"\n                  value={inputs.marketingBudget}\n                  onChange={(e) => handleInputChange('marketingBudget', e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"win95-divider\" />\n\n          <div className=\"win95-grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"win95-panel\">\n              <div className=\"win95-title-bar mb-2\">\n                <div className=\"win95-title-bar-text\">Revenue Breakdown</div>\n              </div>\n              <div className=\"win95-chart h-64\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart data={revenueBreakdown}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#808080\" />\n                    <XAxis \n                      dataKey=\"name\" \n                      tick={{ fill: '#000000' }}\n                      axisLine={{ stroke: '#808080' }}\n                    />\n                    <YAxis \n                      tick={{ fill: '#000000' }}\n                      axisLine={{ stroke: '#808080' }}\n                      tickFormatter={(value) => formatCurrency(value)}\n                    />\n                    <Tooltip \n                      content={<CustomTooltip />}\n                    />\n                    <Bar \n                      dataKey=\"value\" \n                      radius={[0, 0, 0, 0]}\n                    >\n                      {revenueBreakdown.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill=\"#000080\" />\n                      ))}\n                    </Bar>\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n\n            <div className=\"win95-panel\">\n              <div className=\"win95-title-bar mb-2\">\n                <div className=\"win95-title-bar-text\">Profit Analysis</div>\n              </div>\n              <div className=\"win95-chart h-64\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart data={profitBreakdown}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#808080\" />\n                    <XAxis \n                      dataKey=\"name\" \n                      tick={{ fill: '#000000' }}\n                      axisLine={{ stroke: '#808080' }}\n                    />\n                    <YAxis \n                      tick={{ fill: '#000000' }}\n                      axisLine={{ stroke: '#808080' }}\n                      tickFormatter={(value) => formatCurrency(value)}\n                    />\n                    <Tooltip \n                      content={<CustomTooltip />}\n                    />\n                    <Bar \n                      dataKey=\"value\" \n                      radius={[0, 0, 0, 0]}\n                    >\n                      {profitBreakdown.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={entry.value >= 0 ? '#008000' : '#800000'} />\n                      ))}\n                    </Bar>\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"win95-divider\" />\n\n          <div className=\"win95-panel\">\n            <div className=\"win95-title-bar mb-2\">\n              <div className=\"win95-title-bar-text\">Summary</div>\n            </div>\n            <div className=\"win95-grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div>\n                <div className=\"win95-label\">Total Hours</div>\n                <div className=\"win95-input\">{Math.round(calculations.totalHours)}</div>\n              </div>\n              <div>\n                <div className=\"win95-label\">Billable Hours</div>\n                <div className=\"win95-input\">{Math.round(calculations.billableHours)}</div>\n              </div>\n              <div>\n                <div className=\"win95-label\">Total Revenue</div>\n                <div className=\"win95-input text-green-800\">{formatCurrency(calculations.totalRevenue)}</div>\n              </div>\n              <div>\n                <div className=\"win95-label\">Net Profit</div>\n                <div className={`win95-input ${calculations.netProfit >= 0 ? 'text-green-800' : 'text-red-800'}`}>\n                  {formatCurrency(calculations.netProfit)}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RevenueCalculator; "],
  "mappings": "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",
  "names": ["r", "f", "o", "clsx", "init_clsx", "__esmMin", "twJoin", "index", "argument", "resolvedValue", "string", "arguments", "length", "toValue", "createTailwindMerge", "createConfigFirst", "createConfigRest", "configUtils", "cacheGet", "cacheSet", "functionToCall", "initTailwindMerge", "classList", "config", "reduce", "previousConfig", "createConfigCurrent", "createConfigUtils", "cache", "get", "set", "tailwindMerge", "cachedResult", "result", "mergeClassList", "apply", "CLASS_PART_SEPARATOR", "createClassGroupUtils", "getGroupRecursive", "arbitraryPropertyRegex", "getGroupIdForArbitraryProperty", "createClassMap", "processClassesRecursively", "getPart", "isThemeGetter", "getPrefixedClassGroupEntries", "createLruCache", "IMPORTANT_MODIFIER", "createParseClassName", "sortModifiers", "SPLIT_CLASSES_REGEX", "fromTheme", "arbitraryValueRegex", "fractionRegex", "stringLengths", "tshirtUnitRegex", "lengthUnitRegex", "colorFunctionRegex", "shadowRegex", "imageRegex", "isLength", "isArbitraryLength", "isNumber", "isArbitraryNumber", "isInteger", "isPercent", "isArbitraryValue", "isTshirtSize", "sizeLabels", "isArbitrarySize", "isArbitraryPosition", "imageLabels", "isArbitraryImage", "isArbitraryShadow", "isAny", "getIsArbitraryValue", "isLengthOnly", "isNever", "isShadow", "isImage", "getDefaultConfig", "twMerge", "init_bundle_mjs", "__esmMin", "classMap", "conflictingClassGroups", "conflictingClassGroupModifiers", "getClassGroupId", "className", "classParts", "split", "shift", "getConflictingClassGroupIds", "classGroupId", "hasPostfixModifier", "conflicts", "classPartObject", "_a", "currentClassPart", "nextClassPartObject", "nextPart", "classGroupFromNextClassPart", "slice", "undefined", "validators", "classRest", "join", "find", "validator", "test", "arbitraryPropertyClassName", "exec", "property", "substring", "indexOf", "theme", "prefix", "Map", "prefixedClassGroupEntries", "Object", "entries", "classGroups", "forEach", "classGroup", "classDefinition", "classPartObjectToEdit", "push", "key", "path", "currentClassPartObject", "pathPart", "has", "func", "classGroupEntries", "map", "prefixedClassGroup", "fromEntries", "value", "maxCacheSize", "cacheSize", "previousCache", "update", "separator", "experimentalParseClassName", "isSeparatorSingleCharacter", "firstSeparatorCharacter", "separatorLength", "parseClassName", "modifiers", "bracketDepth", "modifierStart", "postfixModifierPosition", "currentCharacter", "baseClassNameWithImportantModifier", "hasImportantModifier", "startsWith", "baseClassName", "maybePostfixModifierPosition", "sortedModifiers", "unsortedModifiers", "modifier", "sort", "__spreadValues", "classGroupsInConflict", "classNames", "trim", "originalClassName", "Boolean", "variantModifier", "modifierId", "classId", "includes", "conflictGroups", "i", "group", "mix", "k", "themeGetter", "Set", "Number", "isNaN", "endsWith", "label", "testValue", "colors", "spacing", "blur", "brightness", "borderColor", "borderRadius", "borderSpacing", "borderWidth", "contrast", "grayscale", "hueRotate", "invert", "gap", "gradientColorStops", "gradientColorStopPositions", "inset", "margin", "opacity", "padding", "saturate", "scale", "sepia", "skew", "space", "translate", "getOverscroll", "getOverflow", "getSpacingWithAutoAndArbitrary", "getSpacingWithArbitrary", "getLengthWithEmptyAndArbitrary", "getNumberWithAutoAndArbitrary", "getPositions", "getLineStyles", "getBlendModes", "getAlign", "getZeroAndEmpty", "getBreaks", "getNumberAndArbitrary", "aspect", "container", "columns", "box", "display", "float", "clear", "isolation", "object", "overflow", "overscroll", "position", "start", "end", "top", "right", "bottom", "left", "visibility", "z", "basis", "flex", "grow", "shrink", "order", "col", "span", "row", "justify", "content", "items", "self", "p", "px", "py", "ps", "pe", "pt", "pr", "pb", "pl", "m", "mx", "my", "ms", "me", "mt", "mr", "mb", "ml", "w", "screen", "h", "size", "text", "font", "tracking", "leading", "list", "placeholder", "decoration", "indent", "align", "whitespace", "break", "hyphens", "bg", "repeat", "from", "via", "to", "rounded", "border", "divide", "outline", "ring", "shadow", "filter", "table", "caption", "transition", "duration", "ease", "delay", "animate", "transform", "rotate", "origin", "accent", "appearance", "cursor", "caret", "resize", "scroll", "snap", "touch", "select", "fill", "stroke", "sr", "cn", "inputs", "twMerge", "clsx", "init_utils", "__esmMin", "init_clsx", "init_bundle_mjs", "card_exports", "__export", "Card", "CardContent", "CardHeader", "CardTitle", "React", "init_card", "__esmMin", "init_utils", "_a", "ref", "_b", "className", "props", "__objRest", "__spreadValues", "cn", "RevenueCalculator_exports", "__export", "RevenueCalculator_default", "import_react", "import_recharts", "isStandalone", "Card", "CardContent", "CardHeader", "CardTitle", "className", "children", "React", "ui", "error", "RevenueCalculator", "inputs", "setInputs", "calculations", "setCalculations", "calculateRevenue", "totalHours", "billableHours", "standardHours", "emergencyHours", "standardRevenue", "emergencyRevenue", "materialsSales", "materialsCost", "materialsProfit", "laborCost", "overhead", "totalCosts", "a", "b", "totalRevenue", "netProfit", "handleInputChange", "name", "value", "prev", "__spreadProps", "__spreadValues", "revenueBreakdown", "profitBreakdown", "formatCurrency", "getBarColor", "CustomTooltip", "active", "payload", "label", "_a", "data", "item", "index", "e", "entry", "RevenueCalculator_default"]
}
