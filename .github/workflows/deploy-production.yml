name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "production-deploy"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: |
          .next/cache
          out/
          node_modules/.cache
        key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json', '**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-build-
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: |
        npm run build-for-vercel
        # Create _site directory for GitHub Pages
        mkdir -p _site
        # Copy everything from public directory (which already has index.html)
        cp -r public/* _site/
        # Copy any additional static assets not in public
        [ -d "css" ] && [ ! -d "_site/css" ] && cp -r css _site/
        [ -d "js" ] && [ ! -d "_site/js" ] && cp -r js _site/
        [ -d "img" ] && [ ! -d "_site/img" ] && cp -r img _site/
        # Copy Next.js output if it exists
        if [ -d "out" ]; then
          cp -r out/* _site/
        fi
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'
    
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4